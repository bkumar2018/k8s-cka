
User account. -- for human being admin, developer  
Service account   -- for application like jenkins, prometheus etc 


Tokens are passed 


k get serviceaccount 

k describe serviceaccount default

k describe pod my-kubernetes-dashboard


k create serviceaccount <sa-name>
also by declarative way using yaml 

...............sa-definition.yaml.....
apiVersion: v1
kind: ServiceAccount
metadata:
    name: dashboard-sa
    namespace: default 
...............


k describe serviceaccount dashboard-sa 

pass this serviceaccount to pod.


apiVersion: v1 
kind: Pod
metadata:
    name: my-k8s-dashboard

spc:
    containers:
        - name: my-k8s-dashboard 
          image: my-k8s-dashboard
    ServiceAccountName: dashboard-sa

-----------------

k describe pod my-k8s-dashboard

k exec -it my-k8s-dashboard ls /var/run/secrets

automountServiceAccountToken : false - -> not auto mounted 

...........

k create token dashboard-sa 

k create token dashboard-sa --duration 2h 
<token>

////////

jq -R   -- using this decode the token to get expiry


/////


controlplane ~ ➜  k get serviceaccount
NAME      SECRETS   AGE
default   0         2m55s
dev       0         22s

sa -> service account

k get sa 
k describe sa default 



controlplane ~ ➜  k create serviceaccount dashboard-sa 
serviceaccount/dashboard-sa created

controlplane ~ ➜  k get serviceaccount
NAME           SECRETS   AGE
dashboard-sa   0         6s
default        0         9m14s
dev            0         6m41s




Use the kubectl edit command for the deployment and specify the serviceAccountName field inside the spec.template.spec.

controlplane ~ ➜  k edit deploy web-dashboard 
deployment.apps/web-dashboard edited

controlplane ~ ➜  

controlplane ~ ➜  k set serviceaccount deploy/web-dashboard dashboard-sa
deployment.apps/web-dashboard serviceaccount updated

