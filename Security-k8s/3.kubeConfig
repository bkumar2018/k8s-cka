
KubeConfig

curl https://my-kube-playground:6443/api/v1/pods \
    --key admin.key
    --cert admin.crt 
    --cacert ca.crt 
    {
        "kind":"PodList",
        "apiVersion": "v1",
        "metadata":{
            "selfLink":"/api/v1/pods",
        },
        "items":[]
    }

    using above query the k8s rest of kube-api server using curl 

    kubectl get pods
        --server my-kube:6443
        --client-key admin.key
        --client-certficate admin.crt
        --certificate-authority ca.crt 
    

$Home/.kube/config
--server my-kube:6443
--client-key admin.key
--client-certficate admin.crt
--certificate-authority ca.crt 
    
kubectl get pods --kubeconfig conf 

$HOME/.kube/config 

Clusters - dev, prod , google.  
Contexts -- admin@prod , dev@Google 
Users - admin, dev user, prod user

kube config file:

/////////
apiVersion:v1 
kind: Config

clusters:

contexts:

users:

/////////
apiVersion:v1 
kind: Config
current-context: <default>

clusters:  --> here multiple server can be list
- name: my-kube-server
  cluster:
    certificate-authority: ca.crt 
    server: https://my-kube-server:6443

contexts:
- name: my-kube-admin@my-kube-server
  context:
    cluster: my-kube-server
    user: my-kube-admin


users:
- name: my-kube-admin
  user:
    client-certificate: admin.crt 
    client-key: admin.key 


//////

k config view  -- > list config details



Q:
Where is the default kubeconfig file located in the current environment?

Find the current home directory by looking at the HOME environment variable.
A:

controlplane ~ ➜  ls $HOME/.kube/config 
/root/.kube/config

Q:
How many clusters are defined in the default kubeconfig file?

A: 1

controlplane ~ ➜  k config view
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://controlplane:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED

//////////
Q:
How many Users are defined in the default kubeconfig file?
A: 1 
kubernetes-admin

Q:
How many contexts are defined in the default kubeconfig file?

A:
kubernetes

Q:
What is the user configured in the current context?

A:
current-context: kubernetes-admin@kubernetes

Q:
What is the name of the cluster configured in the default kubeconfig file?

A:
cluster: kubernetes

Q:
A new kubeconfig file named my-kube-config is created. It is placed in the /root directory. How many clusters are defined in that kubeconfig file?

A:

controlplane ~ ➜  ls
CKA  my-kube-config  sample.yaml

controlplane ~ ➜  cat my-kube-config 
apiVersion: v1
kind: Config

clusters:
- name: production
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

- name: development
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

- name: kubernetes-on-aws
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

- name: test-cluster-1
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

contexts:
- name: test-user@development
  context:
    cluster: development
    user: test-user

- name: aws-user@kubernetes-on-aws
  context:
    cluster: kubernetes-on-aws
    user: aws-user

- name: test-user@production
  context:
    cluster: production
    user: test-user

- name: research
  context:
    cluster: test-cluster-1
    user: dev-user

users:
- name: test-user
  user:
    client-certificate: /etc/kubernetes/pki/users/test-user/test-user.crt
    client-key: /etc/kubernetes/pki/users/test-user/test-user.key
- name: dev-user
  user:
    client-certificate: /etc/kubernetes/pki/users/dev-user/developer-user.crt
    client-key: /etc/kubernetes/pki/users/dev-user/dev-user.key
- name: aws-user
  user:
    client-certificate: /etc/kubernetes/pki/users/aws-user/aws-user.crt
    client-key: /etc/kubernetes/pki/users/aws-user/aws-user.key

current-context: test-user@development
preferences: {}


///////////
How many clusters are define ?
A: 4

clusters:
- name: production
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

- name: development
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

- name: kubernetes-on-aws
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

- name: test-cluster-1
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    server: https://controlplane:6443

Q: How many contexts are configured in the my-kube-config file?
A:  4

contexts:
- name: test-user@development
  context:
    cluster: development
    user: test-user

- name: aws-user@kubernetes-on-aws
  context:
    cluster: kubernetes-on-aws
    user: aws-user

- name: test-user@production
  context:
    cluster: production
    user: test-user

- name: research
  context:
    cluster: test-cluster-1
    user: dev-user

Q:
What user is configured in the research context?
A:


users:
- name: test-user
  user:
    client-certificate: /etc/kubernetes/pki/users/test-user/test-user.crt
    client-key: /etc/kubernetes/pki/users/test-user/test-user.key
- name: dev-user
  user:
    client-certificate: /etc/kubernetes/pki/users/dev-user/developer-user.crt
    client-key: /etc/kubernetes/pki/users/dev-user/dev-user.key
- name: aws-user
  user:
    client-certificate: /etc/kubernetes/pki/users/aws-user/aws-user.crt
    client-key: /etc/kubernetes/pki/users/aws-user/aws-user.key

current-context: test-user@development
preferences: {}


Q:
What user is configured in the research context?

A:

- name: research
  context:
    cluster: test-cluster-1
    user: dev-user

Q:
What is the name of the client-certificate file configured for the aws-user?
A:
 /etc/kubernetes/pki/users/aws-user/aws-user.crt

- name: aws-user
  user:
    client-certificate: /etc/kubernetes/pki/users/aws-user/aws-user.crt
    client-key: /etc/kubernetes/pki/users/aws-user/aws-user.key


Q:
What is the current context set to in the my-kube-config file?

A:
current-context: test-user@development

Q:
I would like to use the dev-user to access test-cluster-1. Set the current context to the right one so I can do that.
Once the right context is identified, use the kubectl config use-context command

A:

To use that context, run the command: kubectl config --kubeconfig=/root/my-kube-config use-context research

controlplane ~ ➜  k config --kubeconfig=/root/my-kube-config use-context research 
Switched to context "research".

kubectl config use-context research --kubeconfig /root/my-kube-config 

cat /root/my-kube-config 
look for current context 


To know the current context, run the command: 
kubectl config --kubeconfig=/root/my-kube-config current-context
research


Q:
We don't want to specify the kubeconfig file option on each kubectl command.
Set the my-kube-config file as the default kubeconfig file and make it persistent across all sessions without overwriting the existing ~/.kube/config. Ensure any configuration changes persist across reboots and new shell sessions.

Note: Don't forget to source the configuration file to take effect in the existing session. Example:

A:

Add the my-kube-config file to the KUBECONFIG environment variable.

Open your shell configuration file:
vi ~/.bashrc

Add one of these lines to export the variable:
export KUBECONFIG=/root/my-kube-config
# OR
export KUBECONFIG=~/my-kube-config
# OR
export KUBECONFIG=$HOME/my-kube-config


Apply the Changes:
Reload the shell configuration to apply the changes in the current session:
source ~/.bashrc



Default kubeconfig file configured
Persistent across sessions

export KUBECONFIG=/root/my-kube-config


Q:
With the current-context set to research, we are trying to access the cluster. However something seems to be wrong. Identify and fix the issue.
Try running the kubectl get pods command and look for the error. All users certificates are stored at /etc/kubernetes/pki/users.

A:

controlplane ~ ✖ k get pods
error: unable to read client-cert /etc/kubernetes/pki/users/dev-user/developer-user.crt for dev-user due to open /etc/kubernetes/pki/users/dev-user/developer-user.crt: no such file or directory

controlplane ~ ✖ k get nodes
error: unable to read client-cert /etc/kubernetes/pki/users/dev-user/developer-user.crt for dev-user due to open /etc/kubernetes/pki/users/dev-user/developer-user.crt: no such file or directory



controlplane ~ ➜  vim my-kube-config 
edit /etc/kubernetes/pki/users/dev-user/developer-user.crt.  
change it to:
/etc/kubernetes/pki/users/dev-user/dev-user.crt

controlplane ~ ➜  source ~/.bashrc 


controlplane ~ ➜  k get pods
No resources found in default namespace.

controlplane ~ ➜  k get nodes
NAME           STATUS   ROLES           AGE   VERSION
controlplane   Ready    control-plane   49m   v1.33.0




