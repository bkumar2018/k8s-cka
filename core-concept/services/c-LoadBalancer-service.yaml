
apiVersion: v1
kind: Service
metadata:
  name: myapp-service

spec:
  type: LoadBalancer
  ports:
    - targetPort: 80
      port: 80
      nodePort: 30001

///////

same like nodeport service but this time will using external cloud e.g google cloud loadbalancer for app service
if the external loadbalancer not available then this will simply act as NodePort service even if this is mentioned type as LoadBalancer


kubectl get svc
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.43.0.1    <none>        443/TCP   20m

ClusterIP is default service cretae at launch .

What is the type of the default kubernetes service? - ClusterIP

What is the targetPort configured on the kubernetes service? - 443

controlplane ~ ➜  kubectl describe svc 
Name:                     kubernetes
Namespace:                default
Labels:                   component=apiserver
                          provider=kubernetes
Annotations:              <none>
Selector:                 <none>
Type:                     ClusterIP
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.43.0.1
IPs:                      10.43.0.1
Port:                     https  443/TCP
TargetPort:               6443/TCP
Endpoints:                192.168.187.128:6443
Session Affinity:         None
Internal Traffic Policy:  Cluster
Events:                   <none>



controlplane ~ ➜  kubectl get all
NAME                                            READY   STATUS    RESTARTS   AGE
pod/simple-webapp-deployment-8555484b96-727zp   1/1     Running   0          24s
pod/simple-webapp-deployment-8555484b96-hrw7g   1/1     Running   0          24s
pod/simple-webapp-deployment-8555484b96-mhn9l   1/1     Running   0          24s
pod/simple-webapp-deployment-8555484b96-t8npm   1/1     Running   0          24s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.43.0.1    <none>        443/TCP   25m

NAME                                       READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/simple-webapp-deployment   4/4     4            4           24s

NAME                                                  DESIRED   CURRENT   READY   AGE
replicaset.apps/simple-webapp-deployment-8555484b96   4         4         4       24s


controlplane ~ ➜  kubectl describe deployment
Name:                   simple-webapp-deployment
Namespace:              default
CreationTimestamp:      Mon, 08 Sep 2025 02:00:12 +0000
Labels:                 <none>
Annotations:            deployment.kubernetes.io/revision: 1
Selector:               name=simple-webapp
Replicas:               4 desired | 4 updated | 4 total | 4 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  name=simple-webapp
  Containers:
   simple-webapp:
    Image:         kodekloud/simple-webapp:red
    Port:          8080/TCP
    Host Port:     0/TCP
    Environment:   <none>
    Mounts:        <none>
  Volumes:         <none>
  Node-Selectors:  <none>
  Tolerations:     <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   simple-webapp-deployment-8555484b96 (4/4 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  16s   deployment-controller  Scaled up replica set simple-webapp-deployment-8555484b96 from 0 to 4


////
create a new web-app service



////
controlplane ~ ➜  cat webapp-svc.yaml 
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service 
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 8080
    targetPort: 8080
  selector:
    name: simple-webapp
  type: NodePort

///
controlplane ~ ➜  kubectl create -f webapp-svc.yaml 
service/webapp-service created

controlplane ~ ➜  kubectl get svc
NAME             TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
kubernetes       ClusterIP   10.43.0.1      <none>        443/TCP          30m
webapp-service   NodePort    10.43.173.15   <none>        8080:30080/TCP   10s



///////

controlplane ~ ✖ kubectl describe deployment  simple-webapp-deployment
Name:                   simple-webapp-deployment
Namespace:              default
CreationTimestamp:      Mon, 08 Sep 2025 02:00:12 +0000
Labels:                 <none>
Annotations:            deployment.kubernetes.io/revision: 1
Selector:               name=simple-webapp
Replicas:               4 desired | 4 updated | 4 total | 4 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:  name=simple-webapp
  Containers:
   simple-webapp:
    Image:         kodekloud/simple-webapp:red
    Port:          8080/TCP
    Host Port:     0/TCP
    Environment:   <none>
    Mounts:        <none>
  Volumes:         <none>
  Node-Selectors:  <none>
  Tolerations:     <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   simple-webapp-deployment-8555484b96 (4/4 replicas created)
Events:
  Type    Reason             Age    From                   Message
  ----    ------             ----   ----                   -------
  Normal  ScalingReplicaSet  7m31s  deployment-controller  Scaled up replica set simple-webapp-deployment-8555484b96 from 0 to 4



